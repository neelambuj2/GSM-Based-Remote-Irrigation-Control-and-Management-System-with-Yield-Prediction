#include "DHT.h"
//here we use pin IO14 of ESP32 to read data
#define DHTPIN 32
#define DHTTYPE DHT11     // may be DHT11
DHT dht(DHTPIN, DHTTYPE);
#define Serial2_RXPIN 18 
#define Serial2_TXPIN 19
HardwareSerial Serial2(2);

char x;

char c;
char d='h';
char e ='f';
char l='a';
char q='k';
char p='v';
char g ='w';
int sensorPin = 35;  
int light_pin = 33; //can be changed accordingly
int temp_hum_pin=2;//can be changed accordingly
  // select the input pin for the potentiometer
float sensorValue = 0; 
float lightValue=0;
float temp_value=0;
float humidity_value=0;            // variable to store the value coming from the sensor
char zz;
String m="31604045";


void setup()
{
  pinMode(2,OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
  pinMode(14,OUTPUT);
  pinMode(25,OUTPUT);//dht11
  pinMode(26,OUTPUT);//light
  pinMode(27,OUTPUT);//moisture
  pinMode(32,INPUT);//dht11
  pinMode(33,INPUT);//light
  pinMode(35,INPUT);//moisture
  pinMode(34,OUTPUT);//MOTOR
  digitalWrite(12,LOW);
  digitalWrite(13,LOW);
  digitalWrite(14,LOW);
  Serial.begin(9600);   // Setting the baud rate of arduino  
  Serial2.begin(9600, SERIAL_8N1, Serial2_RXPIN, Serial2_TXPIN);    // Setting the baud rate of gsm
    delay(5000);

  // AT command to set SIM900 to SMS mode
  Serial2.print("AT+CMGF=1\r"); 
  delay(100);
  // Set module to send SMS data to serial out upon receipt 
  Serial2.print("AT+CNMI=2,2,0,0,0\r");
  delay(100);
  
}


void loop()
{ 
 /* if (Serial.available()>0)
  //b=(Serial.read());
  //Serial.write(b);
   switch(Serial.read())
  {
    case 'r':
      digitalWrite(2, HIGH);   // turn the LED on (HIGH is the voltage level)
      
      RecieveMessage();
      break;
      
  }*/

 if (Serial2.available()>0)
 {
  char c;
  c=Serial2.read();
   Serial.print(c);
   zz=c;
 }
 
    //Serial.write(c);
    //Serial.write("\r\n");
    if(zz==d)
    {
      
       delay(500);
     
       digitalWrite(2,HIGH);
    }
      if(zz==e)
    {
       
       delay(500);
       
       digitalWrite(2,LOW);
    }
    if(zz==l)
    {
      digitalWrite(27, HIGH); 
       delay(2000);
        sensorValue = analogRead(sensorPin);  
    

   delay(1000); 
     x=(sensorValue/1023)*100;
     x=100-x;
     if(x<25)
   {
       digitalWrite(2, HIGH);
   } 
   Serial.println(x);
   while(x<=25)
   {
      sensorValue = analogRead(sensorPin);    
  delay(1000); 
    x=(sensorValue/1023)*100;
   x=100-x;
   Serial.println(x);
    
   }
   digitalWrite(2, LOW);
    digitalWrite(27, LOW);
    }
     if(zz==q)
    {
        digitalWrite(27, HIGH);
       delay(1000);
        sensorValue = analogRead(sensorPin);    
  delay(1000); 
    x=(sensorValue/1023)*100;
   x=100-x;
   if(x<45)
   {
       digitalWrite(2, HIGH);
   } 
   Serial.println(x);
   while(x<=45)
   {
      sensorValue = analogRead(sensorPin);    
  delay(1000); 
    x=(sensorValue/1023)*100;
   x=100-x;
   Serial.println(x);
    
   }
   digitalWrite(27, LOW);
    digitalWrite(2, LOW);
    }
     if(zz==p)
    {
       digitalWrite(27, HIGH);
       delay(1000);
        sensorValue = analogRead(sensorPin);    
  delay(1000); 
    x=(sensorValue/1023)*100;
   x=100-x;
   if(x<60)
   {
       digitalWrite(2, HIGH);
   } 
   Serial.println(x);
   while(x<=60)
   {
      sensorValue = analogRead(sensorPin);    
  delay(1000); 
    x=(sensorValue/1023)*100;
   x=100-x;
   Serial.println(x);
    
   }
   digitalWrite(27, LOW);
    digitalWrite(2, LOW);
    }   
    if(zz==g)
    {
       digitalWrite(25, HIGH);
       delay(500);
     
    
  
  //call begin to start sensor
  dht.begin();
  delay(500);
 
  float temp_value = dht.readTemperature();
  delay(500);
   m=temp_value;
  float humidity_value = dht.readHumidity();
  delay(500);
    m=m*100+humidity_value;
    digitalWrite(25,LOW);
    digitalWrite(27,HIGH);
    delay(500);
    sensorValue = analogRead(sensorPin);
    x=(sensorValue/1023)*100;
   x=100-x;
    m=m*100+x;
   digitalWrite(27,LOW);
    digitalWrite(26,HIGH);
   delay(500);
 lightValue = analogRead(light_pin);
  lightValue=(lightValue/1023)*100;
  lightValue=100-lightValue;
   m=m*100+lightValue;
   Serial.println(m);
digitalWrite(26, LOW);

   SendMessage();
  
     
    }
  
    
}


 void SendMessage()
{
  Serial2.println("AT+CMGF=1\r");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial2.println("AT+CMGS=\"+919952523066\"\r"); // Replace x with mobile number
  delay(1000);
  
  Serial2.println(m);// The SMS text you want to send
  delay(100);
   Serial2.println((char)26);// ASCII code of CTRL+Z
  delay(1000);
}


 void RecieveMessage()
{  
 Serial2.print("AT+CMGF=1\r"); 
  delay(100);

  Serial2.print("AT+CNMI=2,2,0,0,0\r"); // AT Command to receive a live SMS
  delay(10000);
}